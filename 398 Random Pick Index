class Solution:
    
    # reservoir sampling: not sure
    
    def __init__(self, nums):
        self.nums = nums
    
    def pick(self, target):
        res = None
        count = 0
        for i, x in enumerate(self.nums):
            if x == target:
                count += 1
                chance = random.randint(1, count)
                if chance == count:
                    res = i
        return res

    # solution 2:
     def __init__(self, nums: List[int]):
        
        self.hashmap = defaultdict(list)
        for idx, num in enumerate(nums):
            self.hashmap[num].append(idx)

    def pick(self, target: int) -> int:
        return self.hashmap[target][random.randint(0,len(self.hashmap[target])-1)]

    
    
# Your Solution object will be instantiated and called as such:
# obj = Solution(nums)
# param_1 = obj.pick(target)
