# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def recoverFromPreorder(self, S):
        """
        :type S: str
        :rtype: TreeNode
        """
      
        ans = {-1: TreeNode(0)}    
        def addTree(v, p):        
            ans[p] = TreeNode(int(v))
            if not ans[p - 1].left:
                ans[p - 1].left = ans[p]
            else:                  
                ans[p - 1].right = ans[p]
        val, dep = '', 0          
        for c in S:
            if c != '-':
                val += c          
            elif val:              
                addTree(val, dep)   
                val, dep = '', 1    
            else:
                dep += 1            
        addTree(val, dep)        
        return ans[0]
