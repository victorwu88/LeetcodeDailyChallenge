# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def buildTree(self, preorder: List[int], inorder: List[int]) -> TreeNode:
        
        def helper(left, right):
            nonlocal preorder_index

            if left > right:
                return None

            val = preorder[preorder_index]

            root = TreeNode(val)

            preorder_index += 1


            index = idx_map[val]


            root.left = helper(left, index - 1)
            root.right = helper(index + 1, right)
            return root

        preorder_index = 0

        idx_map = {val: idx for idx, val in enumerate(inorder)}

        return helper(0, len(preorder) - 1)
        
