Suppose you have n integers labeled 1 through n. A permutation of those n integers perm (1-indexed) is considered a beautiful arrangement if for every i (1 <= i <= n), either of the following is true:

perm[i] is divisible by i.
i is divisible by perm[i].
Given an integer n, return the number of the beautiful arrangements that you can construct.

 Python Solution:
 class Solution:
    count = 0
    def countArrangement(self, n: int) -> int:
        
        visited = [False] * (n + 1)
        self.calculate(n, 1, visited)
        return self.count
    
    def calculate(self, n, pos, visited):
        if pos > n:
            self.count += 1
            
        for i in range(1, n + 1):
            if not visited[i] and (pos % i == 0 or i % pos == 0):
                visited[i] = True
                self.calculate(n, pos + 1, visited)
                visited[i] = False
        
